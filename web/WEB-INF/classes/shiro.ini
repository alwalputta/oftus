 [main]
 # Ehcache
 builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
 securityManager.cacheManager = $builtInCacheManager

 # Create JDBC realm.
 jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

 # Configure JDBC realm datasource.
 dataSource = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
 dataSource.URL = jdbc:mysql://localhost:3306/app
 dataSource.user = root
 dataSource.password = ""
 jdbcRealm.dataSource = $dataSource

 # Configure JDBC realm SQL queries.
 jdbcRealm.authenticationQuery = SELECT password FROM Credential WHERE status = 'A' and username = ?
 jdbcRealm.userRolesQuery = SELECT c.role FROM role c, UserRole d WHERE c.role_id and d.role_id and user_Id = (select b.user_id from credential a, usercredential b where a.credential_id = b.credential_id and a.username = ?)

 #roles.unauthorizedUrl = /WEB-INF/results/login_form.jsp

 # name of request parameter with username; if not present filter assumes 'username'
 # authc.usernameParam = j_username
 # name of request parameter with password; if not present filter assumes 'password'
 # authc.passwordParam = j_password
 # authc.failureKeyAttribute = shiroLoginFailure

 #sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
 #jdbcRealm.credentialsMatcher = $sha256Matcher

 #authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
 #authc.loginUrl = /WEB-INF/results/login_form.jsp
 #authc.successUrl  = /authoring

 [urls]
 results/secure/** = authc, roles[user]
 results/admin/** = authc, roles[user]
 results/** = authc
 ** = authc, roles[admin]
